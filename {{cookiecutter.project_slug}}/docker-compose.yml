version: '3.7'

services:

  postgres:
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB={{cookiecutter.project_slug}}
    build:
      context: ./docker
      dockerfile: Dockerfile_postgres
    ports:
      - "5433:5432"
    volumes:
      - type: volume
        source: postgres
        target: /var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - postgres
    restart: always

  pgadmin:
    container_name: pgadmin4
    environment:
      - PGADMIN_EMAIL=pgadmin4@pgadmin.org
      - PGADMIN_PASSWORD=admin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - type: volume
        source: pgadmin
        target: /var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    depends_on:
      - postgres
    restart: always

  web:
    container_name: python-backend
    build:
      context: ./
      dockerfile: ./docker/Dockerfile_python
    volumes:
      - ".:/home/{{cookiecutter.project_slug}}"
      - "./.venv"
    tty: true
    ports:
      - "8000:8000"
    networks:
      - postgres
    depends_on:
      - postgres
    restart: always

volumes:
  postgres:
  pgadmin:

networks:
  postgres:
    driver: bridge
