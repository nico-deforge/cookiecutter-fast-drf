name: Django CI

on:
  push:
    branches: [develop]
  pull_request:
    branches:
      - '*'

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8.*]
  
    services:
        postgres:
          image: postgres
          env:
            POSTGRES_DB: {{cookiecutter.project_slug}}
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: test
          ports:
            - 5432:5432
          # Set health checks to wait until postgres has started
          options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    {% raw %}
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip

    - name: Install Poetry
      run: |
        pip install poetry

    - name: Set up Cache
      uses: actions/cache@v1
      id: cache-poetry
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          venv-${{ matrix.python-version }}-

    - name: Install Dependencies
      if: steps.cache-poetry.outputs.cache-hit != 'true'
      run: |
        poetry install
    
    {% endraw %}
      
    - name: Setup Environment
      run: |
        cp ./.github/workflows/secret.py {{cookiecutter.project_slug}}/config/settings
        echo "DJANGO_SETTINGS_MODULE={{cookiecutter.project_slug}}.config.settings.test" >> $GITHUB_ENV

    - name: Verify code has been formatted with Black
      run: poetry run black --check .

    - name: Verify code has been formatted with isort
      run: poetry run isort -c .

    - name: Static Analysis
      run: poetry run flake8 .

    - name: Type checking
      run: poetry run mypy --show-error-codes --pretty .

    - name: Verify no model changes without accompanying migrations
      run: poetry run python manage.py makemigrations --check

    - name: Run Tests
      run: poetry run pytest .